1.
package com.Threading;

public class CarGame {
public static void main(String[] args) {
CarGame cg = new CarGame();
Thread t1 = new Thread(new Runnable() {
public void run() {
for(int i=1;i<=5;i++) {
System.out.println("Car 1 completed :  "+i+" km.");
try {
if(i==2) {
Thread.sleep(2000);
System.out.println("Car 1 stoped at Petrol pump");
}
else if(i==4) {
System.out.println("Car 1 stoped at PitStop");
Thread.sleep(1000);
}
}
catch(InterruptedException ie) {
ie.printStackTrace();
}
}
System.out.println("Car 1 completed his journey succefully ..... ");
}
});
Thread t2 = new Thread(new Runnable() {
public void run() {
for(int i=1;i<=5;i++) {
System.out.println("Car 2 completed :  "+i+" km.");
try {
if(i==2) {
Thread.sleep(2000);
System.out.println("Car 2 stoped at Petrol pump");
}
else if(i==4) {
System.out.println("Car 2 stoped at PitStop");
Thread.sleep(1000);
}
}
catch(InterruptedException ie) {
ie.printStackTrace();
}
}
System.out.println("Car 2 completed his journey succefully ..... ");
}
});
Thread t3 = new Thread(new Runnable() {
public void run() {
for(int i=1;i<=5;i++) {
System.out.println("Car 3 completed :  "+i+" km.");
try {
if(i==2) {
Thread.sleep(2000);
System.out.println("Car 3 stoped at Petrol pump");
}
else if(i==4) {
System.out.println("Car 3 stoped at PitStop");
Thread.sleep(1000);
}
}
catch(InterruptedException ie) {
ie.printStackTrace();
}
}
System.out.println("Car 3 completed his journey succefully ..... ");
}
});
Thread t4 = new Thread(new Runnable() {
public void run() {
for(int i=1;i<=5;i++) {
System.out.println("Car 4 completed :  "+i+" km.");
try {
if(i==2) {
Thread.sleep(2000);
System.out.println("Car 4 stoped at Petrol pump");
}
else if(i==4) {
System.out.println("Car 4 stoped at PitStop");
Thread.sleep(1000);
}
}
catch(InterruptedException ie) {
ie.printStackTrace();
}
}
System.out.println("Car 4 completed his journey succefully ..... ");
}
});
Thread t5 = new Thread(new Runnable() {
public void run() {
for(int i=1;i<=5;i++) {
System.out.println("Car 5 completed :  "+i+" km.");
try {
if(i==2) {
Thread.sleep(2000);
System.out.println("Car 5 stoped at Petrol pump");
}
else if(i==4) {
System.out.println("Car 5 stoped at PitStop");
Thread.sleep(1000);
}
}
catch(InterruptedException ie) {
ie.printStackTrace();
}
}
System.out.println("Car 5 completed his journey succefully ..... ");
}
});
Thread t6 = new Thread(new Runnable() {
public void run() {
for(int i=1;i<=5;i++) {
System.out.println("Car 6 completed :  "+i+" km.");
try {
if(i==2) {
Thread.sleep(2000);
System.out.println("Car 6 stoped at Petrol pump");
}
else if(i==4) {
System.out.println("Car 6 stoped at PitStop");
Thread.sleep(1000);
}
}
catch(InterruptedException ie) {
ie.printStackTrace();
}
}
System.out.println("Car 6 completed his journey succefully ..... ");
}
});
t1.start();
t2.start();
t3.start();
t4.start();
t5.start();
t6.start();
}

}
2.a
package com.srk;
public class ThreadExp {

public static void main(String[] args) {
Thread1 t1=new Thread1();
Thread2 t2=new Thread2();
Runnable1 r1=new Runnable1();
Thread t3=new Thread(r1);
t1.start();
t2.start();
t3.start();

}

}
class Thread1 extends Thread
{
public void run()
{
for(int i=1;i<=10;i++)
{
System.out.println("Good Morning");
}
try {
Thread.sleep (1000);
} catch (InterruptedException e) {
// TODO Auto-generated catch block
e.printStackTrace();
}
}
}
class Thread2 extends Thread
{
public void run()
{
for(int i=1;i<=10;i++)
{
System.out.println("Hello");
}
try {
Thread.sleep (2000);
} catch (InterruptedException e) {
// TODO Auto-generated catch block
e.printStackTrace();
}
}
}
class Runnable1 extends Thread
{
public void run()
{
for(int i=1;i<=10;i++)
{
System.out.println("Welcome");
}
try {
Thread.sleep (3000);
} catch (InterruptedException e) {
// TODO Auto-generated catch block
e.printStackTrace();
}
}
}

2b.
package com.wrapper;

public class Examce {

public static void main(String[] args){
Thread1 t1=new Thread1();
Thread2 t2=new Thread2();
Runnable1 r1=new Runnable1();
Runnable2 r2=new Runnable2();
Thread t3=new Thread(r1);
Thread t4=new Thread(r2);
t1.start();
t2.start();
t3.start();
try {
t3.join();
} catch (InterruptedException e) {
e.printStackTrace();
}
System.out.println(t3.isAlive());
t4.start();
}

}
class Thread1 extends Thread
{
public void run()
{
for(int i=1;i<=5;i++)
{
System.out.println("Thread1:"+i);
}
}
}
class Thread2 extends Thread
{
public void run()
{
for(int i=6;i<=10;i++)
{
System.out.println("Thread2:"+i);
}
}
}
class Runnable1 extends Thread
{
public void run()
{
for(int i=11;i<=15;i++)
{
System.out.println("Thread3:"+i);
}
}
}
class Runnable2 extends Thread
{
public void run()
{
for(int i=16;i<=20;i++)
{
System.out.println("Thread4:"+i);
}
}
}

2c.
package com.src1;
public class DaemonEx {
public static void main(String[] args)
{
Thread1 t1=new Thread1();
Thread2 t2=new Thread2();
Thread3 t3=new Thread3();
t1.start();
t2.setDaemon(true);
t2.start();
t3.start();
}
}
class Thread1 extends Thread
{
public synchronized void run()
{
if(Thread.currentThread().isDaemon())
{
System.out.println("Thread1 is a Deamon");
}
else
{
System.out.println("Thread1 is a user");

}
for(int i=1;i<2;i++)
{
System.out.println("hello");

}
}
}
class Thread2 extends Thread
{
public void run()
{
if(Thread.currentThread().isDaemon())

{
System.out.println("Thread2 is a Daemon");
}
else
{
System.out.println("Thread2 is a user");

}
for(int i=2;i<3;i++)
{
System.out.println("Gd mrng");

}
}
}
class Thread3 extends Thread
{
public void run()
{
if(Thread.currentThread().isDaemon())

{
System.out.println("Thread3 is a Daemon");
}
else
{
System.out.println("Thread3 is a user");

}
for(int i=3;i<4;i++)
{
System.out.println("Have a Good Day");

}
}
}
